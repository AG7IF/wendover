version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1
  aws-ecr: circleci/aws-ecr@9.0
  aws-s3: circleci/aws-s3@4.0

workflows:
  web:
    jobs:
      - test-web
      - build-web:
          requires:
            - test-web
          filters:
            branches:
              only:
                - develop
                - main
      - deploy-hold-web:
          type: approval
          filters:
            branches:
              only:
                - main
      - deploy-web-prod:
          requires:
            - build-web
            - deploy-hold-web
          filters:
            branches:
              only:
                - main

  wendsrv:
    jobs:
      - test-wendover
      - build-hold-wendsrv:
          type: approval
          filters:
            branches:
              only:
                - main
                - derhabicht/1/deployment
      - build-wendsrv:
          requires:
            - test-wendover
            - build-hold-wendsrv
          filters:
            branches:
              only:
                - main
                - derhabicht/1/deployment
      - deploy-hold-wendsrv:
          type: approval
          filters:
            branches:
              only:
                - main
                - derhabicht/1/deployment
      - migrate-wendsrv-prod:
          requires:
            - build-wendsrv
            - deploy-hold-wendsrv
          filters:
            branches:
              only:
                - main
                - derhabicht/1/deployment
      - deploy-wendsrv-prod:
          requires:
            - migrate-wendsrv-prod
          filters:
            branches:
              only:
                - main

jobs:
  test-web:
    working_directory: ~/wendover/web
    docker:
      - image: cimg/node:21.6.2
    steps:
      - checkout:
          path: ~/wendover
      - run:
          name: noop
          command: echo "Implement me"
  build-web:
    working_directory: ~/wendover/web
    docker:
      - image: cimg/node:21.6.2
    steps:
      - checkout:
          path: ~/wendover
      - restore_cache:
          key: dependency-cache{{ checksum "yarn.lock" }}
      - run:
          name: install-packages
          command: yarn install
      - save_cache:
          key: dependency-cache{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: build-project
          command: npx nuxi generate
      - persist_to_workspace:
          root: .
          paths:
            - ./.output/public
  deploy-web-prod:
    working_directory: ~/wendover/web
    docker:
      - image: cimg/aws:2024.03
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup:
          role_arn: ${WENDOVER_ROLE_ARN}
      - aws-s3/sync:
          from: ./.output/public
          to: ${WENDOVER_WEB_BUCKET}
          arguments: --acl public-read --cache-control "max-age=86400"
  test-wendover:
    working_directory: ~/go/src/wendover
    docker:
      - image: cimg/go:1.22.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache{{ checksum "go.sum" }}
      - run:
          name: vendor
          command: go mod vendor
      - save_cache:
          key: dependency-cache{{ checksum "go.sum" }}
          paths:
            - ./vendor
      - run:
          name: run-tests
          command: make test
  build-wendsrv:
    working_directory: ~/go/src/wendover
    docker:
      - image: cimg/go:1.22.1
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache{{ checksum "go.sum" }}
      - run:
          name: Tidy
          command: go mod tidy
      - save_cache:
          key: dependency-cache{{ checksum "go.sum" }}
          paths:
            - /go/src/pkg/
      - aws-ecr/build_and_push_image:
          account_id: ${AWS_ACCOUNT_ID}
          auth:
            - aws-cli/setup:
                role_arn: ${WENDOVER_ROLE_ARN}
          dockerfile: deployments/docker/wendsrv/Dockerfile
          push_image: true
          region: ${AWS_REGION}
          repo: ${ECR_REPO_NAME}
          tag: ${CIRCLE_BUILD_NUM},latest
  migrate-wendsrv-prod:
    working_directory: ~/go/src/wendover
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: ${WENDOVER_ROLE_ARN}
      - aws-s3/sync:
          from: ./deployments/migrations
          to: ${WENDOVER_MIGRATIONS_BUCKET}
  deploy-wendsrv-prod:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - run:
          name: noop
          command: echo "Implement me"

